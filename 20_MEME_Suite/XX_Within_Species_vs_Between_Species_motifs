
## INDEX ##

module load Bowtie2/2.4.4-GCC-10.3.0

bowtie2-build subset_NODE_24575.fasta subset_NODE_24575



## MAP ##

READ_DIR="/storage/scratch/users/rj23k073/04_DEER/TEST/mapping/reads"
OUTPUT_DIR="/storage/scratch/users/rj23k073/04_DEER/TEST/mapping_SUBSET/BAM"

REF="/storage/scratch/users/rj23k073/04_DEER/TEST/mapping_SUBSET/subset_NODE_24575"

DATASET="deer"


setwd(READ_DIR)

Read_list <- gsub("\\.R1.*","",list.files(pattern="R1.dedup.fastq.gz"))

setwd(OUTPUT_DIR)


for(i in 1:length(Read_list)){
  
  reads1 <- Read_list[i]
  
  sh_name <- paste0(reads1,"_bowtie2.sh")

  code_block <- paste0("bowtie2 -p 6 --very-sensitive-local -x ",REF," -1 ",READ_DIR,"/",reads1,".R1.dedup.fastq.gz -2 ",READ_DIR,"/",reads1,".R2.dedup.fastq.gz -S ",OUTPUT_DIR,"/",reads1,".sam")
  
  code_block2 <- paste0("samtools view -Sb ",OUTPUT_DIR,"/",reads1,".sam > ",OUTPUT_DIR,"/",reads1,".bam")
  
  code_block3 <- paste0("rm ",OUTPUT_DIR,"/",reads1,".sam")
  
  code_block4 <- paste0("echo Finished ",reads1)
  
  write ("#!/bin/bash", sh_name)
  write ("#SBATCH --mem=2000M", sh_name, append = TRUE)
  write ("#SBATCH --nodes=1", sh_name, append = TRUE)
  write ("#SBATCH --ntasks=1", sh_name, append = TRUE)
  write ("#SBATCH --cpus-per-task=6", sh_name, append = TRUE)
  write ("#SBATCH --time=01:10:00", sh_name, append = TRUE)
  write ("#SBATCH --mail-user=<russell.jasper@unibe.ch>", sh_name, append = TRUE)
  write ("#SBATCH --mail-type=FAIL,END", sh_name, append = TRUE)
  write ("#SBATCH --output=slurm-%x.%j.out", sh_name, append = TRUE)
  write ("module load Bowtie2/2.4.4-GCC-10.3.0", sh_name, append = TRUE)
  write ("module load SAMtools/1.13-GCC-10.3.0", sh_name, append = TRUE)
  write (code_block, sh_name, append = TRUE)
  write (code_block2, sh_name, append = TRUE)
  write (code_block3, sh_name, append = TRUE)
  write (code_block4, sh_name, append = TRUE)
  
}


## CONVERT TO FASTA ##
# (add this to above next time)

module load SAMtools/1.13-GCC-10.3.0

samtools fasta 1_8.bam > 1_8_mapped.fa
samtools fasta 4_8.bam > 4_8_mapped.fa
samtools fasta 4_9.bam > 4_9_mapped.fa
samtools fasta 5_8.bam > 5_8_mapped.fa
samtools fasta 5_9.bam > 5_9_mapped.fa
samtools fasta 6_10.bam > 6_10_mapped.fa


## JELLYFISH ## 

# SLURM #

#!/bin/bash
#SBATCH --mem=124000M
#SBATCH --nodes=1
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=20
#SBATCH --time=02:00:00
#SBATCH --mail-user=<russell.jasper@unibe.ch>
#SBATCH --mail-type=FAIL,END
#SBATCH --output=slurm-%x.%j.out
module load  Jellyfish/2.3.0-GCC-10.3.0
jellyfish count -m 21 -t 20 -s 10G -o 1_8_kmer_counts.jf ../BAM/1_8_mapped.fa
jellyfish histo -t 20 1_8_kmer_counts.jf > 1_8_kmer_hist.txt

jellyfish count -m 21 -t 20 -s 10G -o 4_8_kmer_counts.jf ../BAM/4_8_mapped.fa
jellyfish histo -t 20 4_8_kmer_counts.jf > 4_8_kmer_hist.txt

jellyfish count -m 21 -t 20 -s 10G -o 4_9_kmer_counts.jf ../BAM/4_9_mapped.fa
jellyfish histo -t 20 4_9_kmer_counts.jf > 4_9_kmer_hist.txt

jellyfish count -m 21 -t 20 -s 10G -o 5_8_kmer_counts.jf ../BAM/5_8_mapped.fa
jellyfish histo -t 20 5_8_kmer_counts.jf > 5_8_kmer_hist.txt

jellyfish count -m 21 -t 20 -s 10G -o 5_9_kmer_counts.jf ../BAM/5_9_mapped.fa
jellyfish histo -t 20 5_9_kmer_counts.jf > 5_9_kmer_hist.txt

jellyfish count -m 21 -t 20 -s 10G -o 6_10_kmer_counts.jf ../BAM/6_10_mapped.fa
jellyfish histo -t 20 6_10_kmer_counts.jf > 6_10_kmer_hist.txt



